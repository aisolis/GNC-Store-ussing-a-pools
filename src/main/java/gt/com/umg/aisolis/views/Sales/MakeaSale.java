/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package gt.com.umg.aisolis.views.Sales;

import gt.com.umg.aisolis.dao.ClientDao;
import gt.com.umg.aisolis.dao.ProductDao;
import gt.com.umg.aisolis.dao.SalesDao;
import gt.com.umg.aisolis.dao.SalesDetailDao;
import gt.com.umg.aisolis.models.Client;
import gt.com.umg.aisolis.models.Product;
import gt.com.umg.aisolis.models.Sale;
import gt.com.umg.aisolis.models.SaleDetail;
import java.util.ArrayList;
import java.util.Date;
import java.util.List;
import java.util.Optional;
import java.util.stream.Collectors;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author swords
 */
public class MakeaSale extends javax.swing.JFrame {

    SalesDetailDao sdd = new SalesDetailDao();
    SalesDao salesDao = new SalesDao();
    ClientDao clientDao = new ClientDao();
    ProductDao productDao = new ProductDao();
    
    List<Product> products;
    boolean validmoment = false;
    Product selectedProduct = new Product();
    List<Product> table = new ArrayList<>();
    
    List<Product> tablefinal = new ArrayList<>();
    
    Client client;
    
    public MakeaSale() {
        initComponents();
        fillCombo();
        registry.disable();
    }
    
    private void fillCombo(){
        
        products = productDao.findAll()
                .stream()
                .filter(product -> "A".equals(product.getStatus().toUpperCase()) && product.getStock() > 0)
                .collect(Collectors.toList());
     
        productCombo.removeAllItems();
        for(Product product : products){
            productCombo.addItem(product.getName());
        }
        validmoment = true;
        this.quantity.setText("0");
         jButton1.disable();
    }
    
    private void fillCombo(List<Product> products2){
        
        productCombo.removeAllItems();
        for(Product product : products2){
            productCombo.addItem(product.getName());
        }
        validmoment = true;
        this.quantity.setText("0");
         jButton1.disable();
    }
    
    private void drawtable(List<Product> products){
        Object[][] data = new Object[products.size()][5];
        for (int i = 0; i < products.size(); i++) {
            Product p = products.get(i);
            data[i][0] = p.getCod_prod();
            data[i][1] = p.getName();
            data[i][2] = p.getPrice();
            data[i][3] = p.getQuantity();
            data[i][4] = p.getSubtotal();
        }
        
        String[] columnNames = {"Codigo de producto", "Nombre", "Precio", "cantidad", "sub total"};

        DefaultTableModel model = new DefaultTableModel(data, columnNames);
        tablefinal = products;
        productlist.setModel(model);
        if(Integer.parseInt(this.quantity.getText().trim()) > 0 && !this.clientName.getText().trim().equals("CLIENTE NO ENCONTRADO")){
            jButton1.enable();
        }else{
           jButton1.disable();
        }
        if(productlist.getRowCount() > 0){
            registry.enable();
        }else{
            registry.disable();
        }
        this.total.setText("Total: Q." + String.valueOf(sumSubtotal(products)));
        
    }
    
    private double sumSubtotal(List<Product> products){
        double sum = 0D;
        for(Product product : products){
            sum+= product.getSubtotal();
        }
        return sum;
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        total = new javax.swing.JLabel();
        jLabel1 = new javax.swing.JLabel();
        clientNit = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        clientName = new javax.swing.JTextField();
        jScrollPane1 = new javax.swing.JScrollPane();
        productlist = new javax.swing.JTable();
        productCombo = new javax.swing.JComboBox<>();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        price = new javax.swing.JTextField();
        jLabel5 = new javax.swing.JLabel();
        stock = new javax.swing.JTextField();
        jButton1 = new javax.swing.JButton();
        jLabel6 = new javax.swing.JLabel();
        quantity = new javax.swing.JTextField();
        jLabel8 = new javax.swing.JLabel();
        remove = new javax.swing.JButton();
        registry = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        total.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        total.setText("Total:");

        jLabel1.setText("Nit del cliente");

        clientNit.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                clientNitFocusLost(evt);
            }
        });
        clientNit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                clientNitActionPerformed(evt);
            }
        });

        jLabel2.setText("Nombre del cliente");

        clientName.setEditable(false);
        clientName.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                clientNameActionPerformed(evt);
            }
        });

        productlist.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null}
            },
            new String [] {
                "Codigo de producto", "Nombre", "Precio", "Cantidad", "sub Total"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane1.setViewportView(productlist);

        productCombo.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));
        productCombo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                productComboActionPerformed(evt);
            }
        });

        jLabel3.setText("Producto:");

        jLabel4.setText("Precio");

        price.setEditable(false);

        jLabel5.setText("Stock disponible:");

        stock.setEditable(false);

        jButton1.setText("AÃ±adir");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jLabel6.setText("Cantidad");

        quantity.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                quantityFocusGained(evt);
            }
        });

        jLabel8.setFont(new java.awt.Font("Segoe UI", 1, 24)); // NOI18N
        jLabel8.setText("Registro de venta");

        remove.setText("Remover");
        remove.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                removeActionPerformed(evt);
            }
        });

        registry.setText("Registrar venta");
        registry.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                registryActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(17, 17, 17)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jLabel1)
                            .addComponent(jLabel3))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(clientNit, javax.swing.GroupLayout.PREFERRED_SIZE, 118, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(jLabel2))
                            .addComponent(productCombo, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(clientName)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jLabel4)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(price, javax.swing.GroupLayout.PREFERRED_SIZE, 87, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jLabel5)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(stock, javax.swing.GroupLayout.PREFERRED_SIZE, 86, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jLabel6)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(quantity, javax.swing.GroupLayout.PREFERRED_SIZE, 87, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 36, Short.MAX_VALUE)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jButton1)
                                    .addComponent(remove))
                                .addGap(5, 5, 5))))
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(total)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(registry)))
                .addContainerGap())
            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(layout.createSequentialGroup()
                    .addGap(358, 358, 358)
                    .addComponent(jLabel8)
                    .addContainerGap(359, Short.MAX_VALUE)))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(68, 68, 68)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(clientNit, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel2)
                    .addComponent(clientName, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(productCombo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel3)
                            .addComponent(jLabel4)
                            .addComponent(price, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel5)
                            .addComponent(stock, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel6)
                            .addComponent(quantity, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(7, 7, 7)
                        .addComponent(jButton1)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(remove)))
                .addGap(10, 10, 10)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 364, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(registry, javax.swing.GroupLayout.DEFAULT_SIZE, 31, Short.MAX_VALUE)
                    .addComponent(total))
                .addGap(8, 8, 8))
            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(layout.createSequentialGroup()
                    .addGap(16, 16, 16)
                    .addComponent(jLabel8)
                    .addContainerGap(520, Short.MAX_VALUE)))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void clientNitActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_clientNitActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_clientNitActionPerformed

    private void clientNameActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_clientNameActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_clientNameActionPerformed

    private void clientNitFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_clientNitFocusLost
        if(!"".equals(this.clientNit.getText().trim())){
            client = clientDao.findById(this.clientNit.getText().trim());
            if(client.getFullName() != null){
                this.clientName.setText(client.getFullName());
            }else{
                this.clientName.setText("CLIENTE NO ENCONTRADO");
            }
        }else{
            this.clientName.setText("");
        }
    }//GEN-LAST:event_clientNitFocusLost

    private void productComboActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_productComboActionPerformed
       
        String productName = String.valueOf(this.productCombo.getSelectedItem());
        if(productName != null && validmoment && !products.isEmpty()){

            
            Optional<Product> productOptional = products.stream()
                    .filter(product -> productName.equalsIgnoreCase(product.getName().trim()))
                    .findFirst();
            Product prodTmp = new Product();
            if (productOptional.isPresent()) {
                 prodTmp = productOptional.get();
                 System.out.println("prodTmp = " + prodTmp);
                this.price.setText(String.valueOf(prodTmp.getPrice()));
                this.stock.setText(String.valueOf(prodTmp.getStock()));
            
            }

            
            
            selectedProduct = prodTmp;
        }
        
    }//GEN-LAST:event_productComboActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        if(Integer.parseInt(this.quantity.getText().trim()) <= selectedProduct.getStock()){
            
            List<Product> tmp2 = new ArrayList<>();

            selectedProduct.setQuantity(Integer.parseInt(this.quantity.getText().trim()));
            //selectedProduct.setStock(selectedProduct.getStock()-selectedProduct.getQuantity());
            System.out.println(selectedProduct.getQuantity());
            System.out.println(selectedProduct.getStock());
            for(Product prod : products){
                if(prod.getCod_prod()  == selectedProduct.getCod_prod()){
                    prod.setStock(selectedProduct.getStock()-selectedProduct.getQuantity());
                }
                tmp2.add(prod);
                
            }
            
            selectedProduct.setSubtotal(selectedProduct.getPrice()*selectedProduct.getQuantity());
            table.add(selectedProduct);
            drawtable(table);
            fillCombo(tmp2);
        }else{
            JOptionPane.showMessageDialog(null, "No existe suficiente stock para el producto seleccionado.", "Error stock insuficiente", JOptionPane.ERROR_MESSAGE);
        }
        
        
        
    }//GEN-LAST:event_jButton1ActionPerformed

    private void quantityFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_quantityFocusGained
        quantity.requestFocus();
    }//GEN-LAST:event_quantityFocusGained

    private void removeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_removeActionPerformed
            String input = JOptionPane.showInputDialog(null, "Por favor, ingrese el codigo del producto que desa remover:");

            if (input != null) {
                try {
                    int number = Integer.parseInt(input);
                    List<Product> filtered = table.stream().filter(product -> product.getCod_prod() != number).collect(Collectors.toList());
                    
                    List<Product> tmp2 = new ArrayList<>();
                    for(Product prod : products){
                        if(prod.getCod_prod()  == selectedProduct.getCod_prod()){
                            prod.setStock(selectedProduct.getStock()+selectedProduct.getQuantity());
                        }

                        if(prod.getStock() > 0){
                            tmp2.add(prod);
                        }
                    }
                    drawtable(filtered);
                    
                    table = filtered;
                } catch (NumberFormatException e) {
                    JOptionPane.showMessageDialog(null, "El valor ingresado no es un nÃºmero vÃ¡lido.", "Error", JOptionPane.ERROR_MESSAGE);
                }
            }
    }//GEN-LAST:event_removeActionPerformed

    private void registryActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_registryActionPerformed
        int medio = 1;
        Sale sale = new Sale(client.getNit(),new Date(),medio, "A");
        salesDao.merge(sale);
        int counter = 0;
        for(Product prod : tablefinal){
            SaleDetail saleDetail = new SaleDetail(salesDao.getInvoice(),prod.getCod_prod(), prod.getQuantity(), prod.getPrice());
            int rs = sdd.merge(saleDetail);
            if(rs > 0){
                counter++;
            }
        }
        
        if(counter == tablefinal.size()){
             int confirm = JOptionPane.showConfirmDialog(null, " Se registro la venta con factura: " + salesDao.getInvoice(), "ConfirmaciÃ³n", JOptionPane.OK_CANCEL_OPTION, JOptionPane.WARNING_MESSAGE);
             if (confirm == JOptionPane.OK_OPTION) {
                    this.dispose();
                }
        }
        
    }//GEN-LAST:event_registryActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(MakeaSale.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(MakeaSale.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(MakeaSale.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(MakeaSale.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new MakeaSale().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTextField clientName;
    private javax.swing.JTextField clientNit;
    private javax.swing.JButton jButton1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTextField price;
    private javax.swing.JComboBox<String> productCombo;
    private javax.swing.JTable productlist;
    private javax.swing.JTextField quantity;
    private javax.swing.JButton registry;
    private javax.swing.JButton remove;
    private javax.swing.JTextField stock;
    private javax.swing.JLabel total;
    // End of variables declaration//GEN-END:variables
}

